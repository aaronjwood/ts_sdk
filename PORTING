Porting Guide
--------------

Copyright (C) 2017 Verizon. All rights reserved.

Table of contents:
-------------------
1. Overview
2. HAL Interface
3. Porting across boards
4. Porting across MCU (same chipset family)
5. Porting across MCU (different chipset families)

1. Overview
---------
The HAL separates the SDK from the specifics of the platform. To make the SDK
work on other platforms, the HAL must be ported to the target platform. The HAL
consists of three layers:
	1 A chipset HAL that is usually provided for a chipset family by the
	  manufacturer.
	2 A port and pin abstraction layer that generalizes the way ports and
	  pins are accessed across MCUs by layers above this.
	3 Peripheral driver APIs that create an abstraction over how different
	  peripherals are accessed across MCUs.

User applications are expected to use the API in layer 3. In addition to the
above layers, there are configuration files that are used to remap which
peripherals and pins are used by the SDK.

Porting efforts can be divided into multiple categories based on what subset of
the above layers is being changed:
	o When porting across boards built around an already supported MCU, only
	  the configuration files need to be changed.
	o When porting across MCUs belonging to the same chipset family, usually
	  layer 1 remains the same while layers 2 and 3 need to be reimplemented.
	o When porting across MCUs belonging to different chipset families or
	  are from different manufacturers, layer 1 will need to be switched out
	  and layers 2 and 3 will need to be reimplemented.


2. HAL Interface
-----------------
Before discussing the details about how to port, it is important to understand
the HAL interface. This interface consists of a set of API routines belonging to
layers 2 and 3 and are common to all platforms and visible to higher layers.

The header files located in ts_sdk/platform/inc form the part of the interface
from layer 3. The header files located in ts_sdk/platform/sw (pin_map.h,
pin_std_defs.h, port_pin_api.h) form the part of the interface from layer 2. A
detailed specification of the entire interface can be found by generating the
HAL documentation (see 'Generating documentation' in the SDK README).

The porting process basically involves implementing the routines and concretely
defining the types that are specified in the above header files for a particular
target.


3. Porting across boards
-------------------------
When the SDK has been implemented for a particular MCU and board combination, it
can be very easily ported to another board. All that needs to be done


4. Porting across MCU (same chipset family)
--------------------------------------------


5. Porting across MCU (different chipset families)
---------------------------------------------------
